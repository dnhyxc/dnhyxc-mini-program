{"version":3,"file":"index.js","sources":["components/mp-html/latex/index.js"],"sourcesContent":["/**\n * @fileoverview latex 插件\n * katex.min.js来源 https://github.com/rojer95/katex-mini\n */\nimport parse from './katex.min'\n\nfunction Latex () {\n\n}\n\nLatex.prototype.onParse = function (node, vm) {\n  // $...$包裹的内容为latex公式\n  if (!vm.options.editable && node.type === 'text' && node.text.includes('$')) {\n    const part = node.text.split(/(\\${1,2})/)\n    const children = []\n    let status = 0\n    for (let i = 0; i < part.length; i++) {\n      if (i % 2 === 0) {\n        // 文本内容\n        if (part[i]) {\n          if (status === 0) {\n            children.push({\n              type: 'text',\n              text: part[i]\n            })\n          } else {\n            if (status === 1) {\n              // 行内公式\n              const nodes = parse.default(part[i])\n              children.push({\n                name: 'span',\n                attrs: {},\n                l: 'T',\n                f: 'display:inline-block',\n                children: nodes\n              })\n            } else {\n              // 块公式\n              const nodes = parse.default(part[i], {\n                displayMode: true\n              })\n              children.push({\n                name: 'div',\n                attrs: {\n                  style: 'text-align:center'\n                },\n                children: nodes\n              })\n            }\n          }\n        }\n      } else {\n        // 分隔符\n        if (part[i] === '$' && part[i + 2] === '$') {\n          // 行内公式\n          status = 1\n          part[i + 2] = ''\n        } else if (part[i] === '$$' && part[i + 2] === '$$') {\n          // 块公式\n          status = 2\n          part[i + 2] = ''\n        } else {\n          if (part[i] && part[i] !== '$$') {\n            // 普通$符号\n            part[i + 1] = part[i] + part[i + 1]\n          }\n          // 重置状态\n          status = 0\n        }\n      }\n    }\n    delete node.type\n    delete node.text\n    node.name = 'span'\n    node.attrs = {}\n    node.children = children\n  }\n}\n\nexport default Latex\n"],"names":["parse"],"mappings":";;AAMA,SAAS,QAAS;AAElB;AAEA,MAAM,UAAU,UAAU,SAAU,MAAM,IAAI;AAE5C,MAAI,CAAC,GAAG,QAAQ,YAAY,KAAK,SAAS,UAAU,KAAK,KAAK,SAAS,GAAG,GAAG;AAC3E,UAAM,OAAO,KAAK,KAAK,MAAM,WAAW;AACxC,UAAM,WAAW,CAAE;AACnB,QAAI,SAAS;AACb,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,UAAI,IAAI,MAAM,GAAG;AAEf,YAAI,KAAK,CAAC,GAAG;AACX,cAAI,WAAW,GAAG;AAChB,qBAAS,KAAK;AAAA,cACZ,MAAM;AAAA,cACN,MAAM,KAAK,CAAC;AAAA,YAC1B,CAAa;AAAA,UACb,OAAiB;AACL,gBAAI,WAAW,GAAG;AAEhB,oBAAM,QAAQA,kCAAK,MAAC,QAAQ,KAAK,CAAC,CAAC;AACnC,uBAAS,KAAK;AAAA,gBACZ,MAAM;AAAA,gBACN,OAAO,CAAE;AAAA,gBACT,GAAG;AAAA,gBACH,GAAG;AAAA,gBACH,UAAU;AAAA,cAC1B,CAAe;AAAA,YACf,OAAmB;AAEL,oBAAM,QAAQA,kCAAK,MAAC,QAAQ,KAAK,CAAC,GAAG;AAAA,gBACnC,aAAa;AAAA,cAC7B,CAAe;AACD,uBAAS,KAAK;AAAA,gBACZ,MAAM;AAAA,gBACN,OAAO;AAAA,kBACL,OAAO;AAAA,gBACR;AAAA,gBACD,UAAU;AAAA,cAC1B,CAAe;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACT,OAAa;AAEL,YAAI,KAAK,CAAC,MAAM,OAAO,KAAK,IAAI,CAAC,MAAM,KAAK;AAE1C,mBAAS;AACT,eAAK,IAAI,CAAC,IAAI;AAAA,QACxB,WAAmB,KAAK,CAAC,MAAM,QAAQ,KAAK,IAAI,CAAC,MAAM,MAAM;AAEnD,mBAAS;AACT,eAAK,IAAI,CAAC,IAAI;AAAA,QACxB,OAAe;AACL,cAAI,KAAK,CAAC,KAAK,KAAK,CAAC,MAAM,MAAM;AAE/B,iBAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC;AAAA,UACnC;AAED,mBAAS;AAAA,QACV;AAAA,MACF;AAAA,IACF;AACD,WAAO,KAAK;AACZ,WAAO,KAAK;AACZ,SAAK,OAAO;AACZ,SAAK,QAAQ,CAAE;AACf,SAAK,WAAW;AAAA,EACjB;AACH;;"}