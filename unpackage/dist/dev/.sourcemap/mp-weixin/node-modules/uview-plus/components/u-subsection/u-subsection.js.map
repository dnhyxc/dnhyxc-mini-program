{"version":3,"file":"u-subsection.js","sources":["node_modules/uview-plus/components/u-subsection/u-subsection.vue","/Users/dnhyxc/Documents/miniprogram/dnhyxc/node_modules/uview-plus/components/u-subsection/u-subsection.vue?type=component"],"sourcesContent":["<template>\n    <view\n        class=\"u-subsection\"\n        ref=\"u-subsection\"\n        :class=\"[`u-subsection--${mode}`]\"\n        :style=\"[addStyle(customStyle), wrapperStyle]\"\n    >\n        <view\n            class=\"u-subsection__bar cursor-pointer\"\n            ref=\"u-subsection__bar\"\n            :style=\"[barStyle]\"\n            :class=\"[\n                mode === 'button' && 'u-subsection--button__bar',\n                innerCurrent === 0 &&\n                    mode === 'subsection' &&\n                    'u-subsection__bar--first',\n                innerCurrent > 0 &&\n                innerCurrent < list.length - 1 &&\n                    mode === 'subsection' &&\n                    'u-subsection__bar--center',\n                innerCurrent === list.length - 1 &&\n                    mode === 'subsection' &&\n                    'u-subsection__bar--last',\n            ]\"\n        ></view>\n        <view\n            class=\"u-subsection__item cursor-pointer\"\n            :class=\"[\n                `u-subsection__item--${index}`,\n                index < list.length - 1 &&\n                    'u-subsection__item--no-border-right',\n                index === 0 && 'u-subsection__item--first',\n                index === list.length - 1 && 'u-subsection__item--last',\n            ]\"\n            :ref=\"`u-subsection__item--${index}`\"\n            :style=\"[itemStyle(index)]\"\n            @tap=\"clickHandler(index)\"\n            v-for=\"(item, index) in list\"\n            :key=\"index\"\n        >\n            <text\n                class=\"u-subsection__item__text\"\n                :style=\"[textStyle(index)]\"\n                >{{ getText(item) }}</text\n            >\n        </view>\n    </view>\n</template>\n\n<script>\n// #ifdef APP-NVUE\nconst dom = uni.requireNativePlugin(\"dom\");\nconst animation = uni.requireNativePlugin(\"animation\");\n// #endif\nimport { props } from \"./props.js\";\nimport { mpMixin } from '../../libs/mixin/mpMixin';\nimport { mixin } from '../../libs/mixin/mixin';\nimport { addStyle, addUnit, sleep } from '../../libs/function/index';\n/**\n * Subsection 分段器\n * @description 该分段器一般用于用户从几个选项中选择某一个的场景\n * @tutorial https://ijry.github.io/uview-plus/components/subsection.html\n * @property {Array}\t\t\tlist\t\t\ttab的数据\n * @property {String ｜ Number}\tcurrent\t\t\t当前活动的tab的index（默认 0 ）\n * @property {String}\t\t\tactiveColor\t\t激活时的颜色（默认 '#3c9cff' ）\n * @property {String}\t\t\tinactiveColor\t未激活时的颜色（默认 '#303133' ）\n * @property {String}\t\t\tmode\t\t\t模式选择，mode=button为按钮形式，mode=subsection时为分段模式（默认 'button' ）\n * @property {String ｜ Number}\tfontSize\t\t字体大小，单位px（默认 12 ）\n * @property {Boolean}\t\t\tbold\t\t\t激活选项的字体是否加粗（默认 true ）\n * @property {String}\t\t\tbgColor\t\t\t组件背景颜色，mode为button时有效（默认 '#eeeeef' ）\n * @property {Object}\t\t\tcustomStyle\t\t定义需要用到的外部样式\n * @property {String}\t        keyName\t        从`list`元素对象中读取的键名（默认 'name' ）\n *\n * @event {Function} change\t\t分段器选项发生改变时触发  回调 index：选项的index索引值，从0开始\n * @example <u-subsection :list=\"list\" :current=\"curNow\" @change=\"sectionChange\"></u-subsection>\n */\nexport default {\n    name: \"u-subsection\",\n    mixins: [mpMixin, mixin, props],\n    data() {\n        return {\n            // 组件尺寸\n            itemRect: {\n                width: 0,\n                height: 0,\n            },\n            innerCurrent: '',\n            windowResizeCallback: {}\n        };\n    },\n    watch: {\n        list(newValue, oldValue) {\n            this.init();\n        },\n        current: {\n            immediate: true,\n            handler(n) {\n                if (n !== this.innerCurrent) {\n                    this.innerCurrent = n\n                }\n                // #ifdef APP-NVUE\n                // 在安卓nvue上，如果通过translateX进行位移，到最后一个时，会导致右侧无法绘制圆角\n                // 故用animation模块进行位移\n                const ref = this.$refs?.[\"u-subsection__bar\"]?.ref;\n                // 不存在ref的时候(理解为第一次初始化时，需要渲染dom，进行一定延时再获取ref)，这里的100ms是经过测试得出的结果(某些安卓需要延时久一点)，勿随意修改\n                sleep(ref ? 0 : 100).then(() => {\n                    animation.transition(this.$refs[\"u-subsection__bar\"].ref, {\n                        styles: {\n                            transform: `translateX(${\n                                n * this.itemRect.width\n                            }px)`,\n                            transformOrigin: \"center center\",\n                        },\n                        duration: 300,\n                    });\n                });\n                // #endif\n            },\n        },\n    },\n    computed: {\n        wrapperStyle() {\n            const style = {};\n            // button模式时，设置背景色\n            if (this.mode === \"button\") {\n                style.backgroundColor = this.bgColor;\n            }\n            return style;\n        },\n        // 滑块的样式\n        barStyle() {\n            const style = {};\n            style.width = `${this.itemRect.width}px`;\n            style.height = `${this.itemRect.height}px`;\n            // 通过translateX移动滑块，其移动的距离为索引*item的宽度\n            // #ifndef APP-NVUE\n            style.transform = `translateX(${\n                this.innerCurrent * this.itemRect.width\n            }px)`;\n            // #endif\n            if (this.mode === \"subsection\") {\n                // 在subsection模式下，需要动态设置滑块的圆角，因为移动滑块使用的是translateX，无法通过父元素设置overflow: hidden隐藏滑块的直角\n                style.backgroundColor = this.activeColor;\n            }\n            return style;\n        },\n        // 分段器item的样式\n        itemStyle(index) {\n            return (index) => {\n                const style = {};\n                if (this.mode === \"subsection\") {\n                    // 设置border的样式\n                    style.borderColor = this.activeColor;\n                    style.borderWidth = \"1px\";\n                    style.borderStyle = \"solid\";\n                }\n                return style;\n            };\n        },\n        // 分段器文字颜色\n        textStyle(index) {\n            return (index) => {\n                const style = {};\n                style.fontWeight =\n                    this.bold && this.innerCurrent === index ? \"bold\" : \"normal\";\n                style.fontSize = addUnit(this.fontSize);\n                // subsection模式下，激活时默认为白色的文字\n                if (this.mode === \"subsection\") {\n                    style.color =\n                        this.innerCurrent === index ? \"#fff\" : this.inactiveColor;\n                } else {\n                    // button模式下，激活时文字颜色默认为activeColor\n                    style.color =\n                        this.innerCurrent === index\n                            ? this.activeColor\n                            : this.inactiveColor;\n                }\n                return style;\n            };\n        },\n    },\n    mounted() {\n        this.init();\n        this.windowResizeCallback = (res) => {\n            this.init();\n        }\n        uni.onWindowResize(this.windowResizeCallback)\n    },\n    beforeUnmount() {\n        uni.offWindowResize(this.windowResizeCallback)\n    },\n\temits: [\"change\"],\n    methods: {\n        addStyle,\n        init() {\n            this.innerCurrent = this.current\n            sleep().then(() => this.getRect());\n        },\n\t\t// 判断展示文本\n\t\tgetText(item) {\n\t\t\treturn typeof item === 'object' ? item[this.keyName] : item\n\t\t},\n        // 获取组件的尺寸\n        getRect() {\n            // #ifndef APP-NVUE\n            this.$uGetRect(\".u-subsection__item--0\").then((size) => {\n                this.itemRect = size;\n            });\n            // #endif\n\n            // #ifdef APP-NVUE\n            const ref = this.$refs[\"u-subsection__item--0\"][0];\n            ref &&\n                dom.getComponentRect(ref, (res) => {\n                    this.itemRect = res.size;\n                });\n            // #endif\n        },\n        clickHandler(index) {\n            this.innerCurrent = index\n            this.$emit(\"change\", index);\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../libs/css/components.scss\";\n\n.u-subsection {\n    @include flex;\n    position: relative;\n    overflow: hidden;\n\t/* #ifndef APP-NVUE */\n\twidth: 100%;\n\tbox-sizing: border-box;\n\t/* #endif */\n\n    &--button {\n        height: 34px;\n        background-color: rgb(238, 238, 239);\n        padding: 3px;\n        border-radius: 4px;\n        align-items: stretch;\n\n        &__bar {\n            background-color: #ffffff;\n            border-radius: 4px !important;\n        }\n    }\n\n    &--subsection {\n        height: 32px;\n    }\n\n    &__bar {\n        position: absolute;\n        /* #ifndef APP-NVUE */\n        transition-property: transform, color;\n        transition-duration: 0.3s;\n        transition-timing-function: ease-in-out;\n        /* #endif */\n\n        &--first {\n            border-top-left-radius: 4px;\n            border-bottom-left-radius: 4px;\n            border-top-right-radius: 0px;\n            border-bottom-right-radius: 0px;\n        }\n\n        &--center {\n            border-top-left-radius: 0px;\n            border-bottom-left-radius: 0px;\n            border-top-right-radius: 0px;\n            border-bottom-right-radius: 0px;\n        }\n\n        &--last {\n            border-top-left-radius: 0px;\n            border-bottom-left-radius: 0px;\n            border-top-right-radius: 4px;\n            border-bottom-right-radius: 4px;\n        }\n    }\n\n    &__item {\n        @include flex;\n        flex: 1;\n        justify-content: center;\n        align-items: center;\n        // vue环境下，需要设置相对定位，因为滑块为绝对定位，item需要在滑块的上面\n        position: relative;\n\n        &--no-border-right {\n            border-right-width: 0 !important;\n        }\n\n        &--first {\n            border-top-left-radius: 4px;\n            border-bottom-left-radius: 4px;\n        }\n\n        &--last {\n            border-top-right-radius: 4px;\n            border-bottom-right-radius: 4px;\n        }\n\n        &__text {\n            font-size: 12px;\n            line-height: 14px;\n            @include flex;\n            align-items: center;\n            transition-property: color;\n            transition-duration: 0.3s;\n        }\n    }\n}\n</style>\n","import Component from '/Users/dnhyxc/Documents/miniprogram/dnhyxc/node_modules/uview-plus/components/u-subsection/u-subsection.vue'\nwx.createComponent(Component)"],"names":["mpMixin","mixin","props","index","addUnit","uni","addStyle","sleep"],"mappings":";;AAoFA,MAAK,YAAU;AAAA,EACX,MAAM;AAAA,EACN,QAAQ,CAACA,cAAAA,SAASC,cAAK,OAAEC,qBAAA;AAAA,EACzB,OAAO;AACH,WAAE;AAAA;AAAA,MAEE,UAAA;AAAA,QACI,OAAO;AAAA,QACP,QAAQ;AAAA,MACd;AAAA,MACE,cAAM;AAAA,MACN,sBAAgB,CAAA;AAAA;EAEvB;AAAA,EACD,OAAO;AAAA,IACH,KAAK,UAAI,UAAA;AACL,WAAK,KAAI;AAAA,IACZ;AAAA,IACD,SAAS;AAAA,MACL,WAAW;AAAA,MACX,QAAQ,GAAG;AACP,YAAI,MAAM,KAAK,cAAc;AACzB,eAAK,eAAe;AAAA,QACxB;AAAA,MAkBH;AAAA,IACJ;AAAA,EACJ;AAAA,EACD,UAAM;AAAA,IACF,eAAQ;AACJ,YAAM,QAAE,CAAA;AAER,UAAI,KAAK,SAAS,UAAU;AACxB,cAAM,kBAAkB,KAAK;AAAA,MACjC;AACA,aAAO;AAAA,IACV;AAAA;AAAA,IAED,WAAU;AACN,YAAM,QAAG,CAAA;AACT,YAAM,QAAQ,GAAG,KAAK,SAAS,KAAE;AACjC,YAAM,SAAS,GAAG,KAAK,SAAS,MAAM;AAGtC,YAAM,YAAO,cACf,KAAA,eAAA,KAAA,SAAA,KACG;AAED,UAAI,KAAK,SAAS,cAAC;AAEf,cAAM,kBAAkB,KAAK;AAAA,MACjC;AACA,aAAO;AAAA,IACV;AAAA;AAAA,IAED,UAAS,OAAA;AACL,aAAO,CAACC,WAAS;AACf,cAAA,QAAA,CAAA;AACJ,YAAA,KAAA,SAAA,cAAA;AAEU,gBAAM,cAAA,KAAA;AACN,gBAAM,cAAK;AACX,gBAAM,cAAO;AAAA,QACjB;AACA,eAAO;AAAA;IAEd;AAAA;AAAA,IAED,UAAU,OAAO;AACb,aAAO,CAACA,WAAU;AACd,cAAM,QAAE,CAAA;AACR,cAAM,aACF,KAAK,QAAQ,KAAA,iBAAAA,SAAA,SAAA;AACjB,cAAM,WAAWC,cAAAA,QAAQ,KAAK,QAAK;AAEnC,YAAI,KAAK,SAAS,cAAc;AAC/B,gBAAA,QACO,KAAK,iBAAAD,SAAA,SAAA,KAAA;AAAA,eACf;AAER,gBAAA,QACS,KAAA,iBAAAA,SACK,KAAA,cACU,KAAK;AAAA,QACnB;AACP,eAAA;AAAA;IAEH;AAAA,EACD;AAAA,EACD,UAAU;AACR,SAAA,KAAA;AACE,SAAK,uBAAM,CAAA,QAAA;AACP,WAAE,KAAA;AAAA,IACN;AACAE,wBAAI,eAAI,KAAA,oBAAA;AAAA,EACX;AAAA,EACD,gBAAgB;AACZA,wBAAE,gBAAA,KAAA,oBAAA;AAAA,EACL;AAAA,EACJ,OAAO,CAAC,QAAQ;AAAA,EACb,SAAS;AAAA,IACT,UAAAC,cAAA;AAAA,IACI,OAAO;AACH,WAAK,eAAE,KAAA;AACPC,oBAAAA,MAAO,EAAC,KAAK,MAAM,KAAA,QAAA,CAAA;AAAA,IACtB;AAAA;AAAA,IAEP,QAAQ,MAAK;AACZ,aAAO,OAAO,SAAI,WAAA,KAAA,KAAA,OAAA,IAAA;AAAA,IACrB;AAAA;AAAA,IAEQ,UAAU;AAEN,WAAK,UAAU,wBAAwB,EAAC,KAAA,CAAA,SAAA;AACpC,aAAK,WAAW;AAAA,MACpB,CAAC;AAAA,IAUb;AAAA,IACQ,aAAa,OAAK;AACd,WAAK,eAAe;AAChC,WAAA,MAAA,UAAA,KAAA;AAAA,IACS;AAAA,EACJ;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtOA,GAAG,gBAAgB,SAAS;","x_google_ignoreList":[0]}